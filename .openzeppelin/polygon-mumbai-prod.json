{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9d1a0f9C510fDeC39686F93c257101cd267FAEF0"
  },
  "proxies": [
    {
      "address": "0x9A35E42cCF1aC1772c75E2027b9D9fE56250a0a3",
      "kind": "transparent"
    },
    {
      "address": "0x95fcaf414e2ad4ca949eb725e684fd196af1fba5",
      "kind": "transparent"
    },
    {
      "address": "0x1cf77299EbCF74C5367cf621Bd2cBd49e3dFD368",
      "kind": "transparent"
    },
    {
      "address": "0x5322B9373E0020A96E8D2Eb58acA6f87f0aFE97F",
      "txHash": "0x37abb9141dbd65ae8cd888de5f2106afcc2067516b78d83352dd0dd181f4fce2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "4a43f476503a304e74887b7a46e21404487e27a570cdf7e43684d8dddd751c4c": {
      "address": "0x2eC705486C9Ea8D117A4d0f7bF64cdF5473Fe82A",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "attestationToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(KetlAttestation)539",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:68"
          },
          {
            "label": "ketlTeamTokenId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:69"
          },
          {
            "label": "allowedCaller",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:71"
          },
          {
            "label": "posts",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_array(t_struct(Post)5716_storage)dyn_storage)",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:76"
          },
          {
            "label": "pinnedPosts",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:76"
          },
          {
            "label": "lastPostIds",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(Counter)3947_storage)",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:77"
          },
          {
            "label": "participants",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:78"
          },
          {
            "label": "participantsMap",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:79"
          },
          {
            "label": "comments",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Post)5716_storage)dyn_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:82"
          },
          {
            "label": "lastCommentIds",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:83"
          },
          {
            "label": "reactions",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5752_storage)dyn_storage)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:85"
          },
          {
            "label": "lastReactionIds",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:87"
          },
          {
            "label": "usersToReactions",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5752_storage))))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:89"
          },
          {
            "label": "feeds",
            "offset": 0,
            "slot": "114",
            "type": "t_array(t_struct(CID)5686_storage)dyn_storage",
            "contract": "Feeds",
            "src": "contracts/Feeds.sol:69"
          },
          {
            "label": "lastFeedId",
            "offset": 0,
            "slot": "115",
            "type": "t_struct(Counter)3947_storage",
            "contract": "Feeds",
            "src": "contracts/Feeds.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CID)5686_storage)dyn_storage": {
            "label": "struct CID[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Post)5716_storage)dyn_storage": {
            "label": "struct Post[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reaction)5752_storage)dyn_storage": {
            "label": "struct Reaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(KetlAttestation)539": {
            "label": "contract KetlAttestation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Reaction)5752_storage)": {
            "label": "mapping(address => struct Reaction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Post)5716_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Post[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reaction)5752_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Reaction[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5752_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Reaction))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Post)5716_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Post[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5752_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Reaction[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5752_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => struct Reaction)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5752_storage)dyn_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Reaction[])))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5752_storage))))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => mapping(address => struct Reaction))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Counters.Counter)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Counters.Counter))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)3947_storage)": {
            "label": "mapping(uint256 => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_struct(CID)5686_storage": {
            "label": "struct CID",
            "members": [
              {
                "label": "digest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hashFunction",
                "type": "t_uint8",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint8",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3947_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Post)5716_storage": {
            "label": "struct Post",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_struct(CID)5686_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "threadId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "replyTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "numberOfComments",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Reaction)5752_storage": {
            "label": "struct Reaction",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "feedId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "postId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "commentId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reactionType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "reactionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d54d6b5f78698c15edf6734b176de9c6bff2ad64564fe5db61fdde2167423b69": {
      "address": "0xAC7309b0Df445D5dD95955e2DE089aD20EcFAB92",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "attestationToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(KetlAttestation)539",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:68"
          },
          {
            "label": "ketlTeamTokenId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:69"
          },
          {
            "label": "allowedCaller",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:71"
          },
          {
            "label": "posts",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_array(t_struct(Post)5716_storage)dyn_storage)",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:76"
          },
          {
            "label": "pinnedPosts",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:76"
          },
          {
            "label": "lastPostIds",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(Counter)3947_storage)",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:77"
          },
          {
            "label": "participants",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:78"
          },
          {
            "label": "participantsMap",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:79"
          },
          {
            "label": "comments",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Post)5716_storage)dyn_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:82"
          },
          {
            "label": "lastCommentIds",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:83"
          },
          {
            "label": "reactions",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5752_storage)dyn_storage)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:85"
          },
          {
            "label": "lastReactionIds",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:87"
          },
          {
            "label": "usersToReactions",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5752_storage))))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:89"
          },
          {
            "label": "profiles",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_struct(CID)5686_storage)",
            "contract": "Profiles",
            "src": "contracts/Profiles.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Post)5716_storage)dyn_storage": {
            "label": "struct Post[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reaction)5752_storage)dyn_storage": {
            "label": "struct Reaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(KetlAttestation)539": {
            "label": "contract KetlAttestation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CID)5686_storage)": {
            "label": "mapping(address => struct CID)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Reaction)5752_storage)": {
            "label": "mapping(address => struct Reaction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Post)5716_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Post[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reaction)5752_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Reaction[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5752_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Reaction))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Post)5716_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Post[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5752_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Reaction[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5752_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => struct Reaction)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5752_storage)dyn_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Reaction[])))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5752_storage))))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => mapping(address => struct Reaction))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Counters.Counter)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Counters.Counter))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)3947_storage)": {
            "label": "mapping(uint256 => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_struct(CID)5686_storage": {
            "label": "struct CID",
            "members": [
              {
                "label": "digest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hashFunction",
                "type": "t_uint8",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint8",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3947_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Post)5716_storage": {
            "label": "struct Post",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_struct(CID)5686_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "threadId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "replyTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "numberOfComments",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Reaction)5752_storage": {
            "label": "struct Reaction",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "feedId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "postId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "commentId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reactionType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "reactionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "40017f5ca4f3e1e00bdc862944d6ccfbbf0e6ac2891c72c72ec513da1aec8123": {
      "address": "0x72df6827B35042b2a8069088DEdfA6c6aB1D165D",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:75"
          },
          {
            "label": "karma",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Karma)5125",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:76"
          },
          {
            "label": "profiles",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(Profiles)5677",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:77"
          },
          {
            "label": "feeds",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(Feeds)5042",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:78"
          },
          {
            "label": "karmaGranted",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool))))",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Feeds)5042": {
            "label": "contract Feeds",
            "numberOfBytes": "20"
          },
          "t_contract(Karma)5125": {
            "label": "contract Karma",
            "numberOfBytes": "20"
          },
          "t_contract(Profiles)5677": {
            "label": "contract Profiles",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool))))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => mapping(address => bool))))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e378805fec12278b3c38f8705d1990e9f9c2b07463f461e91f901f63b718090b": {
      "address": "0x1EF190a7354A8c69913301F0551912E1b0862BB8",
      "txHash": "0x1e8246636d1c27fe2ca4e87d5ede9c26817095d50a3cb2386f7692ed2956704d",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "attestationToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(KetlAttestation)539",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:71"
          },
          {
            "label": "ketlTeamTokenId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:72"
          },
          {
            "label": "allowedCaller",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:74"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "Kred",
            "src": "contracts/Kred.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(KetlAttestation)539": {
            "label": "contract KetlAttestation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "45f4e3268b0c7283019b91d34e558a8c3d9d3bf39f5008bc6d20fc5745e6796a": {
      "address": "0xcEEB01112d02E927cCfE586826be61719F3a794A",
      "txHash": "0x7435a1b7976cc80e4ce5c079703f4e1804f410de9fc83f900a0ea8d762f84a4d",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "attestationToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(KetlAttestation)539",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:71"
          },
          {
            "label": "ketlTeamTokenId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:72"
          },
          {
            "label": "allowedCaller",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:74"
          },
          {
            "label": "posts",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_array(t_struct(Post)5850_storage)dyn_storage)",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:75"
          },
          {
            "label": "pinnedPosts",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:76"
          },
          {
            "label": "lastPostIds",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(Counter)3947_storage)",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:78"
          },
          {
            "label": "participants",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:79"
          },
          {
            "label": "participantsMap",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:81"
          },
          {
            "label": "comments",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Post)5850_storage)dyn_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:84"
          },
          {
            "label": "lastCommentIds",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:86"
          },
          {
            "label": "reactions",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5886_storage)dyn_storage)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:89"
          },
          {
            "label": "lastReactionIds",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:91"
          },
          {
            "label": "usersToReactions",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5886_storage))))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:93"
          },
          {
            "label": "feeds",
            "offset": 0,
            "slot": "114",
            "type": "t_array(t_struct(CID)5820_storage)dyn_storage",
            "contract": "Feeds",
            "src": "contracts/Feeds.sol:69"
          },
          {
            "label": "lastFeedId",
            "offset": 0,
            "slot": "115",
            "type": "t_struct(Counter)3947_storage",
            "contract": "Feeds",
            "src": "contracts/Feeds.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CID)5820_storage)dyn_storage": {
            "label": "struct CID[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Post)5850_storage)dyn_storage": {
            "label": "struct Post[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reaction)5886_storage)dyn_storage": {
            "label": "struct Reaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(KetlAttestation)539": {
            "label": "contract KetlAttestation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Reaction)5886_storage)": {
            "label": "mapping(address => struct Reaction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Post)5850_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Post[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reaction)5886_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Reaction[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5886_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Reaction))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Post)5850_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Post[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5886_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Reaction[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5886_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => struct Reaction)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5886_storage)dyn_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Reaction[])))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5886_storage))))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => mapping(address => struct Reaction))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Counters.Counter)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Counters.Counter))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)3947_storage)": {
            "label": "mapping(uint256 => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_struct(CID)5820_storage": {
            "label": "struct CID",
            "members": [
              {
                "label": "digest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hashFunction",
                "type": "t_uint8",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint8",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3947_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Post)5850_storage": {
            "label": "struct Post",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_struct(CID)5820_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "threadId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "replyTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "numberOfComments",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Reaction)5886_storage": {
            "label": "struct Reaction",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "feedId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "postId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "commentId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reactionType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "reactionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e83e052dad141f142812beb0f446c70c8666a3ddfb188cd39129e35f91c49b02": {
      "address": "0x69589fECcFDf9ADa9B44Ef10bE8d6bBC2e893e99",
      "txHash": "0x6bf5320969dd02d6325874d3523189bf7f410d2a8dc281d9d71c7bc9ccd078ac",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "attestationToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(KetlAttestation)539",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:71"
          },
          {
            "label": "ketlTeamTokenId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:72"
          },
          {
            "label": "allowedCaller",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "KetlGuarded",
            "src": "contracts/superclasses/KetlGuarded.sol:74"
          },
          {
            "label": "posts",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_array(t_struct(Post)5850_storage)dyn_storage)",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:75"
          },
          {
            "label": "pinnedPosts",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:76"
          },
          {
            "label": "lastPostIds",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(Counter)3947_storage)",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:78"
          },
          {
            "label": "participants",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:79"
          },
          {
            "label": "participantsMap",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:81"
          },
          {
            "label": "comments",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Post)5850_storage)dyn_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:84"
          },
          {
            "label": "lastCommentIds",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:86"
          },
          {
            "label": "reactions",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5886_storage)dyn_storage)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:89"
          },
          {
            "label": "lastReactionIds",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage)))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:91"
          },
          {
            "label": "usersToReactions",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5886_storage))))",
            "contract": "Posts",
            "src": "contracts/superclasses/Posts.sol:93"
          },
          {
            "label": "profiles",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_struct(CID)5820_storage)",
            "contract": "Profiles",
            "src": "contracts/Profiles.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Post)5850_storage)dyn_storage": {
            "label": "struct Post[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reaction)5886_storage)dyn_storage": {
            "label": "struct Reaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(KetlAttestation)539": {
            "label": "contract KetlAttestation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CID)5820_storage)": {
            "label": "mapping(address => struct CID)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Reaction)5886_storage)": {
            "label": "mapping(address => struct Reaction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Post)5850_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Post[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reaction)5886_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Reaction[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5886_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Reaction))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Post)5850_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Post[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5886_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Reaction[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5886_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => struct Reaction)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Reaction)5886_storage)dyn_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Reaction[])))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Reaction)5886_storage))))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => mapping(address => struct Reaction))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Counters.Counter)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Counter)3947_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Counters.Counter))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Counter)3947_storage)": {
            "label": "mapping(uint256 => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_struct(CID)5820_storage": {
            "label": "struct CID",
            "members": [
              {
                "label": "digest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hashFunction",
                "type": "t_uint8",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint8",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3947_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Post)5850_storage": {
            "label": "struct Post",
            "members": [
              {
                "label": "author",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_struct(CID)5820_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "threadId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "replyTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "numberOfComments",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Reaction)5886_storage": {
            "label": "struct Reaction",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "feedId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "postId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "commentId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reactionType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "reactionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34565d5b7f654ac54678131aaa4b0b86f2a817dd19b40be7e110211392ffc515": {
      "address": "0x4F83FC2c344E7331aAD49541484CE95e8ac17d57",
      "txHash": "0x3fa4a04904314538b905a79e33c266745aa756a1786c372471ecde918b0436f6",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:75"
          },
          {
            "label": "kred",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Kred)5144",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:77",
            "renamedFrom": "karma"
          },
          {
            "label": "profiles",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(Profiles)5811",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:78"
          },
          {
            "label": "feeds",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(Feeds)5042",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:79"
          },
          {
            "label": "kredGranted",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool))))",
            "contract": "OBSSStorage",
            "src": "contracts/OBSSStorage.sol:80",
            "renamedFrom": "karmaGranted"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Feeds)5042": {
            "label": "contract Feeds",
            "numberOfBytes": "20"
          },
          "t_contract(Kred)5144": {
            "label": "contract Kred",
            "numberOfBytes": "20"
          },
          "t_contract(Profiles)5811": {
            "label": "contract Profiles",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool))))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => mapping(address => bool))))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
