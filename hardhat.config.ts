import '@nomiclabs/hardhat-etherscan'
import '@openzeppelin/hardhat-upgrades'
import '@typechain/hardhat'
import 'hardhat-gas-reporter'
import 'solidity-coverage'
import * as dotenv from 'dotenv'
import {
  ETH_RPC as FALLBACK_ETH_RPC,
  GSN_MUMBAI_PAYMASTER_CONTRACT_ADDRESS,
} from '@big-whale-labs/constants'
import { HardhatUserConfig } from 'hardhat/config'
import { cleanEnv, str, testOnly } from 'envalid'

dotenv.config()

export const {
  CONTRACT_OWNER_PRIVATE_KEY,
  ETH_RPC,
  ETHERSCAN_API_KEY,
  COINMARKETCAP_API_KEY,
  GSN_PAYMASTER_CONTRACT,
} = cleanEnv(process.env, {
  CONTRACT_OWNER_PRIVATE_KEY: str({
    devDefault: testOnly(
      '0000000000000000000000000000000000000000000000000000000000000000'
    ),
  }),
  ETH_RPC: str({ default: FALLBACK_ETH_RPC }),
  ETHERSCAN_API_KEY: str({ devDefault: testOnly('') }),
  COINMARKETCAP_API_KEY: str({ devDefault: testOnly('') }),
  GSN_PAYMASTER_CONTRACT: str({
    default: GSN_MUMBAI_PAYMASTER_CONTRACT_ADDRESS,
  }),
})

const config: HardhatUserConfig = {
  solidity: {
    version: '0.8.19',
    settings: {
      optimizer: {
        enabled: true,
        runs: 200,
      },
      outputSelection: {
        '*': {
          '*': ['storageLayout'],
        },
      },
    },
  },
  networks: {
    deploy: {
      url: ETH_RPC,
      accounts: [CONTRACT_OWNER_PRIVATE_KEY],
    },
    local: {
      url: 'http://127.0.0.1:8545',
      accounts: [], // accounts private keys generated by the local node
    },
  },
  gasReporter: {
    enabled: true,
    currency: 'USD',
    coinmarketcap: COINMARKETCAP_API_KEY,
  },
  etherscan: {
    apiKey: ETHERSCAN_API_KEY,
  },
  typechain: {
    outDir: 'typechain',
  },
}

export default config
